@charset "UTF-8";

@mixin prefix($property, $value){
    -webkit-#{$property}:$value;
    -moz-#{$property}:$value;
    -ms-#{$property}:$value;
    -o-#{$property}:$value;
    #{$property}:$value;
}
@mixin box-sizing($value) {
    -webkit-box-sizing: $value;
       -moz-box-sizing: $value;
        -ms-box-sizing: $value;
         -o-box-sizing: $value;
            box-sizing: $value;
}
@mixin inlineblock( $valign ){
    @if $valign != "" { vertical-align :$valign; }
    display: inline-block;
    *display: inline;
    zoom: 1;
}
@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
@mixin opacity($opacity) {
    $ieOpacity: $opacity * 100;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$ieOpacity})"; // IE8
    filter: alpha(opacity=#{$ieOpacity}); // IE7
    opacity: $opacity;
}

@mixin nostyleipad(){
    -webkit-appearance: none;
    -webkit-border-radius: 0;
    border-radius: 0;
}

@mixin input-placeholder( $color ){
    ::-webkit-input-placeholder{
        color: $color;
    }
    :-moz-placeholder{
        color: $color;
    }
    ::-moz-placeholder{
        color: $color;
    }
    :-ms-input-placeholder{
        color: $color;
    }
}

@mixin no-style-input-ios(){
    input, textarea{
        -webkit-appearance:none;
        -webkit-border-radius: 0;
    }
}

@mixin font-family( $family, $size, $lineheight: null, $weight: null, $style: null){
    font-family: $family;
    font-size: $size;
    @if $lineheight != null { line-height: $lineheight; }
    @if $weight != null { font-weight: $weight; }
    @if $style != null { font-style: $style; }
    .i18n-hr &{

    }
}

@mixin bg-sprite($url, $position, $bgsize){
    background-image: url('../images/' + $url + '.png');
    background-repeat: no-repeat;
    background-position: $position;

    @media screen and (-webkit-min-device-pixel-ratio:2),
                      (-webkit-min-device-pixel-ratio: 2), /* Navigateurs basés sur Webkit */
                      (min--moz-device-pixel-ratio: 2),    /* Anciens navigateurs Firefox (avant Firefox 16) */
                      (min-resolution: 2dppx),             /* La méthode standard */
                      (min-resolution: 192dpi){
        .no-ie &{
            background-image: url('../images/' + $url + '@2x.png');
            background-size: $bgsize + px;
        }
    }
}
@mixin transition($property, $duration, $timing-function, $delay){
    -webkit-transition: $property $duration $timing-function $delay;
    -moz-transition: $property $duration $timing-function $delay;
    -o-transition: $property $duration  $timing-function $delay;
    transition: $property $duration $timing-function $delay;
}
@mixin font-face($name, $file, $weight, $style) {
    // $font_dir: "../../fonts/" !global !default;
    @font-face {
        font-family: '#{$name}';
        src: url('#{$font_dir}#{$file}.eot');
        src: url('#{$font_dir}#{$file}.eot?#iefix') format('embedded-opentype'),
             url('#{$font_dir}#{$file}.woff') format('woff'),
             url('#{$font_dir}#{$file}.ttf') format('truetype'),
             url('#{$font_dir}#{$file}.svgz##{$name}') format('svg'),
             url('#{$font_dir}#{$file}.svg##{$name}') format('svg');
        font-weight: $weight;
        font-style: $style;
    }
}

@mixin font-size($font-size, $line-height:null, $fluid:true) {
    $base-font-size: 12 !global !default;
    font-size: $font-size +px;
    @if $fluid {
        font-size: ($font-size / $base-font-size)*1rem;
    }
    @if $line-height != null {
        line-height: $line-height / $font-size;
    }
}
